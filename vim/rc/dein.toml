[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'w0ng/vim-hybrid'
hook_add = '''
  set background=dark
  autocmd myvimrc ColorScheme * highlight LineNr ctermfg=243
  autocmd myvimrc VimEnter * nested colorscheme hybrid
'''

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "has('lua') && !has('nvim')"
on_i = 1
hook_source = '''
  let g:neocomplete#enable_at_startup = 1
  let g:neocomplete#auto_completion_start_length = 2
  let g:neocomplete#enable_smart_case = 1
  let g:neocomplete#max_list = 5
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  set laststatus=2
  let g:lightline = {
        \ 'colorscheme': 'wombat',
        \ 'active': {
        \   'left': [ [ 'mode', 'paste' ],
        \             [ 'fugitive', 'readonly', 'filename', 'modified' ] ]
        \ },
        \ 'component': {
        \   'readonly': '%{&readonly?"⭤":""}',
        \ },
        \ 'component_function': {
        \   'fugitive': 'LightLineFugitive',
        \ }
    \ }
  function! LightLineFugitive()
    return exists('*fugitive#head') ? fugitive#head() : ''
  endfunction
'''

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1
let g:lsp_diagnostics_echo_delay = 100
let g:lsp_diagnostics_signs_enabled = 1
let g:lsp_diagnostics_highlights_enabled = 0
let g:lsp_diagnostics_virtual_text_enabled = 0
let g:lsp_diagnostics_virtual_text_prefix = ">>> "
let g:lsp_diagnostics_signs_error = {'text': '✗'}
let g:lsp_diagnostics_signs_warning = {'text': '‼'}
let g:lsp_diagnostics_signs_information = {'text': 'i'}
let g:lsp_diagnostics_signs_hint = {'text': '?'}

setlocal omnifunc=lsp#complete
if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif

nnoremap [lsp] <Nop>
nmap <Leader>l [lsp]
nnoremap <silent> [lsp]\] :LspDefinition<CR>
nnoremap <silent> [lsp]rr :LspRename<CR>
nnoremap <silent> [lsp]r :LspReferences<CR>
nnoremap <silent> [lsp]d :LspDocumentDiagnostics<CR>
nnoremap <silent> [lsp]h :LspHover<CR>
nnoremap <silent> [lsp]f :LspDocumentFormat<CR>
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'tpope/vim-unimpaired'
if = 0

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-scripts/tComment'

[[plugins]]
repo = 'tpope/vim-abolish'

[[plugins]]
repo = 'vim-scripts/gtags.vim'
hook_add = '''
  nnoremap [gtags] <Nop>
  nmap <Leader>g [gtags]
  nnoremap <silent> [gtags]g :<C-u>Gtags<Space>-g<Space>
  nnoremap <silent> [gtags]r :<C-u>Gtags<Space>-r<Space>
'''

[[plugins]]
repo = "y-kamiya/automkdir.vim"

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
hook_add = '''
  inoremap <silent><expr> <CR> pumvisible() ? deoplete#close_popup() : "\<CR>"
'''
hook_source = '''
  call deoplete#enable()
'''

[[plugins]]
repo = 'lighttiger2505/deoplete-vim-lsp'
depends = 'deoplete.nvim'
