# $Id: screen-keys.conf,v 1.6 2010/02/02 21:34:16 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
unbind C-b
set -g prefix ^q
bind q send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A send-prefix
#bind ^A last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \ 
unbind Q
bind Q confirm-before "kill-session"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-pane"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
bind s split-window -v
bind v split-window -h

# " windowlist -b
unbind '"'
bind '"' choose-window


###########################
# vi like
 
# move panes
bind ^j select-pane -D
bind ^k select-pane -U
bind ^h select-pane -L
bind ^l select-pane -R
unbind ^n
bind ^n select-pane -t :.+
unbind ^p
bind ^p select-pane -t :.-

# resize panes
bind -r J resize-pane -D 
bind -r K resize-pane -U 
bind -r H resize-pane -L 
bind -r L resize-pane -R 

# vi-style controls for copy mode
setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi Esc send-keys -X clear-selection

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# log of pane
bind-key B pipe-pane 'cat >> $HOME/.tmux/tmux-#W.log' \; display-message 'Started logging to $HOME/.tmux/tmux-#W.log'
bind-key b pipe-pane \; display-message 'Ended logging to $HOME/.tmux/tmux-#W.log'

############################
# basic settings 

set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

set-option -g bell-action none

unbind R
bind R source-file ~/.tmux.conf \; display-message "reload config!"

set -g pane-active-border-style fg="blue"
set -g pane-active-border-style bg="black"

set -s escape-time 0

set-option -g history-limit 20000
########################
# status line
set -g status-fg black
set -g status-bg white

set-window-option -g window-status-current-style fg="white"
set-window-option -g window-status-current-style bg="blue"

#######################
# powerline
set-option -g status on                                                    
set-option -g status-interval 2                                            
set-option -g status-justify "left"                                      
set-option -g status-left-length 100
set-option -g status-right-length 120
# set-option -g status-left "#(~/gws/tmux-powerline/powerline.sh left)"  
set-option -g status-right "#(~/gws/tmux-powerline/powerline.sh right)"

#######################
# resurrect
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-resurrect      \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

# set -g default-command "reattach-to-user-namespace -l /bin/zsh"


#######################
# defaualt shell
set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"
